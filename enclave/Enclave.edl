// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

enclave {
    from "sgx_tstd.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_backtrace.edl" import *;
    from "sgx_tstdc.edl" import *;
    from "sgx_tprotected_fs.edl" import *;
    from "sgx_fs.edl" import *;
    from "sgx_file.edl" import *;

    include "sgx_report.h"

    include "sgx_tprotected_fs.h"
    include "sgx_tcrypto.h"

    struct rsa_3072_pub_key {
       [count = 384]uint8_t* n;
       [count = 4]uint8_t* e;
    };

    trusted {
        /* define ECALLs here. */

        public sgx_status_t calculate_median([in, count=len] int64_t* slice, size_t len, [out] int64_t* median);
        public sgx_status_t create_keypair([user_check]struct rsa_3072_pub_key * pubkey);
        public uint32_t enclave_create_report([in]const sgx_target_info_t* p_qe3_target,
                                              [in]const sgx_report_data_t* p_data,
                                              [out]sgx_report_t* p_report);
    };
};
